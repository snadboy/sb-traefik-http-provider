name: Docker Build and Push

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: sb-traefik-http-provider

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT || secrets.GHCR_PAT || secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.production
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Send success notification to Gotify
        if: success() && github.event_name != 'pull_request' && secrets.GOTIFY_URL != ''
        run: |
          curl -X POST "${{ secrets.GOTIFY_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "title": "‚úÖ Docker Build Success",
              "message": "**sb-traefik-http-provider** built and pushed successfully\n\nüì¶ Image: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest\nüî® Commit: ${{ github.event.head_commit.message }}\nüë§ Author: ${{ github.event.head_commit.author.name }}\nüîó [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
              "priority": 5,
              "extras": {
                "client::display": {
                  "contentType": "text/markdown"
                }
              }
            }'

      - name: Send failure notification to Gotify
        if: failure() && github.event_name != 'pull_request' && secrets.GOTIFY_URL != ''
        run: |
          curl -X POST "${{ secrets.GOTIFY_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "title": "‚ùå Docker Build Failed",
              "message": "**sb-traefik-http-provider** build failed\n\nüî® Commit: ${{ github.event.head_commit.message }}\nüë§ Author: ${{ github.event.head_commit.author.name }}\nüîó [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
              "priority": 8,
              "extras": {
                "client::display": {
                  "contentType": "text/markdown"
                }
              }
            }'