services:
  # SB Traefik HTTP Provider Service
  sb-traefik-http-provider:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: sb-traefik-http-provider
    restart: unless-stopped
    # Docker will use host DNS configuration which includes Tailscale MagicDNS
    ports:
      - "8081:8080"  # Expose provider API
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Required for is_local hosts
      - ./config/provider-config.yaml:/app/config/provider-config.yaml:ro
      - ./config/ssh-hosts.yaml:/app/config/ssh-hosts.yaml:ro
      - ./logs:/var/log/sb-traefik-provider  # Persistent log storage
      - ./app:/app/app  # Mount source code for live debugging and editing
      - ./config:/app/config  # Mount config for live updates
    environment:
      - LOG_LEVEL=DEBUG
      - LOG_DIR=/var/log/sb-traefik-provider
      
      - LOG_JSON=false  # Set to true for JSON logging
      - PYTHONUNBUFFERED=1
      - WORKERS=2  # Number of uvicorn workers
      # DNS Health Check (optional)
      - DNS_HEALTH_CHECK_ENABLED=false  # Set to true to enable
      - DNS_CHECK_NAME=sonarr.isnadboy.comqa1 `
      - DNS_CHECK_NS_TS=100.65.231.21
      - DNS_CHECK_NS_LAN=192.168.86.76
      # - DNS_CHECK_ADMIN_URL=https://dns.isnadboy.com
      # Healthchecks.io Monitoring (optional)
      - HEALTHCHECKS_ENABLED=false  # Set to true to enable Healthchecks.io monitoring
      # - HEALTHCHECKS_PING_URL=https://hc-ping.com/your-uuid-here
    labels:
      - "snadboy.revp.8080.domain=sb-traefik-provider-api.isnadboy.com"
      - "snadboy.revp.9090.domain=sb-traefik-provider-metrics.isnadboy.com"
      - "snadboy.revp.5679.domain=sb-traefik-provider-vscode-debug.isnadboy.com"
      # - "traefik.enable=true"
      # - "traefik.http.routers.provider.rule=Host(`provider.localhost`)"
      # - "traefik.http.services.provider.loadbalancer.server.port=8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Traefik Instance
  traefik:
    image: traefik:v3.2
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.http.endpoint=http://sb-traefik-http-provider:8080/api/traefik/config"
      - "--providers.http.pollInterval=30s"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--log.level=INFO"
      - "--ping"
      # Let's Encrypt configuration with Cloudflare DNS challenge
      - "--certificatesresolvers.letsencrypt.acme.email=dschless@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"  # Staging for testing
      - "snadboy.revp.8080.domain=traefik-dashboard.isnadboy.com"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    networks:
      - traefik
    depends_on:
      - sb-traefik-http-provider
    env_file:
      - .env  # Contains CF_DNS_API_TOKEN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-dynamic:/etc/traefik/dynamic:ro
      - ./letsencrypt:/letsencrypt  # Let's Encrypt certificate storage
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  whoami:
    image: traefik/whoami
    labels:
      # - "traefik.enable=true"
      # - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      # - "traefik.http.routers.whoami.entrypoints=web"
      - "snadboy.revp.80.domain=traefik-whoami.isnadboy.com"
    networks:
      - traefik
    restart: always

  # Test snadboy.revp application
  test-revp-app:
    image: nginx:alpine
    container_name: test-revp-app
    restart: unless-stopped
    ports:
      - "8083:80"
    networks:
      - traefik
    labels:
      - "snadboy.revp.80.domain=test.localhost"
      - "snadboy.revp.80.backend-proto=http"
      - "snadboy.revp.80.backend-path=/"

networks:
  traefik:
    driver: bridge
    name: traefik